<% include ../partials/header %>

        <!-- Initial alert modal -->
        <div class="modal fade" id="pickRoomModal" tabindex="-1" role="dialog" aria-labelledby="pickRoomModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Join a room!</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        In order to begin listening, please join a room (the buttons on the right of the page)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="d-flex justify-content-around">
                <!-- Search & Queue -->
                <div class="ml-0 mr-auto">
                    <div class="card h-100">
                        <div class="card-body text-center" style="max-width: 295px; max-height: 451px;">
                            <h5 class="card-title">Song Search</h5>
                            <form id="form_search">
                                <div class="dropdown"> 
                                    <div class="form-row">
                                        <div class="col">  
                                            <input id="songSearch" type="text" class="form-control" placeholder="Search..." name="search2" disabled>
                                        </div>
                                        <div class="col-3" style="z-index: 15;">
                                            <button id="dropButton" type="submit" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled>
                                                <i class="fa fa-search"></i>
                                            </button>
                                            <div class="dropdown-menu pr-5" aria-labelledby="dropButton">
                                                <a class="dropdown-item" href="#">
                                                    <div class = "container search-result" id="result1">
                                                        <img class = "albImgDropdown" id = "item1a" src="resources/imgs/meme.png">
                                                        <div class="s1" id = 'item1b'></div>
                                                        <div class="s2" id = 'item1c'></div>
                                                    </div>
                                                </a>
                                                <a class="dropdown-item" href="#">
                                                    <div class = "container search-result" id="result2">
                                                        <img class = "albImgDropdown" id = "item2a" src="resources/imgs/meme.png">
                                                        <div class = "container" id= "cont1in">
                                                            <div class="s1" id = 'item2b'></div>
                                                            <div class="s2" id = 'item2c'></div>
                                                        </div>
                                                    </div>
                                                </a>
                                                <a class="dropdown-item" href="#">
                                                    <div class = "container search-result" id="result3">
                                                        <img class = "albImgDropdown" id = "item3a" src="resources/imgs/meme.png">
                                                        <div class = "container" id= "cont1in">
                                                            <div class="s1" id = 'item3b'></div>
                                                            <div class="s2" id = 'item3c'></div>
                                                        </div>
                                                    </div>
                                                </a>
                                                <a class="dropdown-item" href="#">
                                                    <div class = "container search-result" id="result4">
                                                        <img class = "albImgDropdown" id = "item4a" src="resources/imgs/meme.png">
                                                        <div class = "container" id= "cont1in">
                                                            <div class="s1" id = 'item4b'></div>
                                                            <div class="s2" id = 'item4c'></div>
                                                        </div>
                                                    </div>
                                                </a>
                                                <a class="dropdown-item" href="#">
                                                    <div class = "container search-result" id="result5">
                                                        <img class = "albImgDropdown" id = "item5a" src="resources/imgs/meme.png">
                                                        <div class = "container" id= "cont1in">
                                                            <div class="s1" id = 'item5b'></div>
                                                            <div class="s2" id = 'item5c'></div>
                                                        </div>
                                                    </div>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    
                                </div>
                            </form>
                        
                            <p>Queue</p>
                            <div class="text-truncate" style = "overflow-y: auto; overflow-x: hidden;">
                                <ul id="queueList" style="list-style-type: none; overflow: inherit;">
                                    
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Album card -->
                <div class="mx-auto">
                    <div class="row">
                        <div class="card text-center">
                            <img id="album" class="card-img-top" alt="albumn cover" src='resources/imgs/zep.jpg'>
                            <div class="card-body">
                                <h4 id="song_title" class="card-title">Song Title</h4>
                                <p id="artist_name" class="card-text">Artist</p>
                                <button id= "mute_button" class="btn btn-default btn-sm" aria-expanded="false" onclick="mute_button()"><i class="fas fa-volume-up" aria-hidden="true"></i></button>
                            </div>
                        </div>
                    </div>  
                </div>
                <!-- Room buttons -->
                <div class="card mx-auto">
                    <div class="card-body">
                        <h4 class="card-title">Server List:</h4>
                        <button class="btn btn-secondary room-btn py-2 my-1" id="basin">A-Basin</button>
                        <br>
                        <button class="btn btn-secondary room-btn py-2 my-1" id="copper">Copper Mountain</button>
                        <br>
                        <button class="btn btn-secondary room-btn py-2 my-1" id="dora">Eldora</button>
                        <br>
                        <button class="btn btn-secondary room-btn py-2 my-1" id="vail">Vail Resorts</button>
                        <br>
                        <button class="btn btn-secondary room-btn my-1 color-btn" id="winterpark">Winter Park</button>
                        <br>
                    </div>
                </div>
            </div>

            <!-- Chat box adapted from BhaumikPatel https://bootsnipp.com/snippets/r1KW -->
            <div class="row h-100 text-jusitfy">
                <div class="col-6 float-center offset-3">
                    <div class="card" style = "margin-right: -30px; margin-left:-30px">
                        <div class="card-header bg-primary bog text-white">
                            <h5 class="card-title"><img class="widgetImg" src="resources/imgs/si-glyph-bubble-message-text.svg" /> Chat</h5>
                        </div>
                        <div id="chat-body" class="card-body pt-lg-0 px-lg-1">
                            <ul id="messages" class="chat list-group list-group-flush">
                                <!-- Chat messages go here -->
                            </ul>
                        </div>
                        <div class="card-footer">
                            <form id='chatForm'>
                                <div class="input-group input-group-sm">
                                    <input id="chat-input" type="text" class="form-control" placeholder="Type your message here..." autocomplete="off" disabled/>
                                    <div class="input-group-append">
                                        <input id="chat-submit" type="submit" class="btn btn-warning btn-sm" value="Send!" disabled>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script type="text/javascript">
            $(function(){
                $('#pickRoomModal').modal('show');

                // jQuery to refresh the Spotify WebAPI access token
                function refreshTheToken(){
                    $.ajax({
                        url: location.protocol + "//" + location.host + "/refresh_token",
                        success: function(result){
                            console.log('new access token: ' + result.access_token);
                            accessToken = result.access_token;
                        },
                        error: function(){
                            console.log('refresh failed...');
                        }
                    });
                }
                // immediately get the access token
                var accessToken = refreshTheToken();
                setInterval(function(){ refreshTheToken(); }, 1800000); // refresh the access token every 30 minutes
                
                var songs; // stores songs
                
                // deals with filling the search dropdown
                function callback(response){ 
                    songs = response;

                    // fill out the 5 dropdown search results
                    for(var i = 0; i < 5 && i < songs.tracks.items.length; i++){
                        $('#item' + (i + 1) + 'a').attr('src', songs.tracks.items[i].album.images[0].url); //album image
                        $('#item' + (i + 1) + 'b').html((songs.tracks.items[i].name) + ' - ' + (songs.tracks.items[i].album.artists[0].name)); //song name + artist name
                        $('#item' + (i + 1) + 'c').html((songs.tracks.items[i].album.name)); //album name
                    }
                }             

                // send search results to spotify
                function getSearchResults(e){
                    e.preventDefault(); //prevents page from rerendering after 'enter' key is pressed
                    var song = $('#songSearch').val();

                    $.ajax({
                        url:"https://api.spotify.com/v1/search?q=" + song + "&type=track&limit=8",
                        type: 'GET',
                        dataType: "text json",
                        // async: false,
                        headers: {
                            'Authorization': 'Bearer ' + accessToken
                        },
                        success: function(data) {
                            callback(data); // fill dropdown
                            $('#dropButton').dropdown('show'); // open the dropdown to show the results
                        },
                        error: function() {
                            console.log('Retrieval of search results has failed');
                        }
                    });
                }
                
                // run search for songs
                $('#form_search').submit(function(e){ getSearchResults(e); });
                $('#dropButton').click(function(e){ getSearchResults(e); });

                // establishes socket connection to the server while sending the username as the parameter
                var socket = io({
                    query: {
                        uid: Cookies.get('uid')
                    }
                });

                // makes string for adding elements to the chat log
                function buildMsg(data, clientSaid){
                    var innerCount;

                    // timestamp stuff
                    var d = new Date();
                    var h = d.getHours(), m = d.getMinutes(), side = "AM";
                    if(h > 12){
                        h -= 12;
                        side = "PM";
                    }
                    var t = h.toString() + ":" + m.toString() + side;

                    if(clientSaid){
                        // client send message 
                        innerCount =
                        '<li class="right list-group-item clearfix">' +
                            '<div class="chat-body clearfix">' +
                                '<div class="header">' +
                                    '<small class="text-muted">' +
                                        '<img class="widgetImg" src="resources/imgs/si-glyph-clock.svg" />' + t +
                                    '</small>' +
                                    '<strong class="float-right primary-font">' + data.name + '</strong>' +
                                '</div>' +
                                '<p class="card-text">' +
                                    data.msg +
                                '</p>' +
                            '</div>' +
                        '</li>';
                    }
                    else{
                        innerCount =
                        '<li class="left list-group-item clearfix">' +
                            '<div class="chat-body clearfix">' +
                                '<div class="header">' +
                                    '<strong class="primary-font">' + data.name + '</strong>' +
                                    '<small class="float-right text-muted">' +
                                        '<img class="widgetImg" src="resources/imgs/si-glyph-clock.svg" />' + t +
                                    '</small>' +
                                '</div>' +
                                '<p class="card-text">' +
                                    data.msg +
                                '</p>' +
                            '</div>' +
                        '</li>';
                    }
                    return innerCount;
                }

                // sending chat message
                $('#chatForm').submit(function(e){
                    e.preventDefault(); // prevents page reloading
                    
                    $('#messages').append(buildMsg({name:Cookies.get('user'), msg:$('#chat-input').val()}, true)); // add message to local chat log

                    socket.emit('chat message', $('#chat-input').val()); // send message to all other room participants

                    $('#chat-input').val(''); // clear input field
                    
                    return false; // not sure why this is here tbh, was in an example
                });

                // receiving message from other people
                socket.on('chat message', function(data){
                    $('#messages').append(buildMsg(data, false)); // add to the message log
                });

                $('.search-result').click(function(){ // song result clicked, send to server
                    var songIndex = this.id[6] - 1;
                    var uri = songs.tracks.items[songIndex].uri;
                    console.log('\'' + uri + '\' has been selected from the search'); // logs URI of the song
                    $('#dropButton').dropdown('hide'); // removes the dropdown from view


                    // send song ID to database
                    socket.emit('queue song', uri, function(status){
                        if(status === 0){
                            console.log('Song sent to server successfully, adding to local queue');

                            $('#queueList').append(buildMsg2({
                                albumImg: songs.tracks.items[songIndex].album.images[1].url,
                                song: songs.tracks.items[songIndex].name,
                                artist: songs.tracks.items[songIndex].album.artists[0].name,
                                alb_name: songs.tracks.items[songIndex].album.name
                            })); // should add the song to the local list
                        }
                        else if (status === 1){ // malformed URI
                            console.log('The URI \'' + uri + '\' is malformed');
                        }
                        else if(status === 2){ // already in the queue
                            console.log('The song corresponding to URI \'' + uri + '\' is already in the queue');
                        }
                        else{
                            console.log('Server-side error, check Node log.');
                        }
                    });
                });

                socket.on('queue song', function(data){
                    console.log('Song queue signal received with SID \'' + data.sid + '\'');
                    $.ajax({
                        url:"https://api.spotify.com/v1/tracks/" + data.sid,
                        type: 'GET',
                        dataType: "text json",
                        //async: false,
                        headers: {
                            'Authorization': 'Bearer ' + accessToken
                        },
                        success: function(data2) {
                            console.log('Successful Spotify track info request:');
                            console.log('Track name: \'' + data2.name + '\'');
                            console.log('kids: ' + $('#queueList').children()['length']);
                            var first = $('#queueList').children()['length'] == 0;
                            $('#queueList').append(buildMsg2({
                                albumImg: data2.album.images[1].url,
                                song: data2.name,
                                artist: data2.artists[0].name,
                                alb_name: data2.album.name
                            }, first));
                            
                        },
                        error: function() {
                            console.log('couldnt queue up received song \'' + sid + '\'');
                        }
                    });
                    // get song details via spotify API call (song's name, artist, album cover)
                });

                /*function testQue(id){
                    $.ajax({
                        url:"https://api.spotify.com/v1/tracks/" + id,
                        type: 'GET',
                        dataType: "text json",
                        //async: false,
                        headers: {
                            'Authorization': 'Bearer ' + accessToken
                        },
                        success: function(data2) {
                            // buildMsg2 has to be built to handle how the data will be presented in the queue
                            // $('#Queue').append(buildMsg2({albumImg: data2.album.images[1].url, song: data2.name , 
                            //     alb_name = data2.album.name})                 
                            console.log(data2.name);
                            console.log(data2.album.name);
                            console.log(data2.uri);
                            console.log(data2.artists[0].name);
                            console.log(data2.album.images[1].url)
                        },
                        error: function() {
                            console.log('fail');
                        }
                    });
                }  */

                function buildMsg2(response, first){
                    var head = (first ? '<li class="listElement firstInQueue mt-1">' : '<li class="listElement">');
                    var newItem =  head +
                                '<img class="albImgQueue" src="' + response.albumImg + '">' +
                                '<div class="container">' +
                                    '<div class="sA">' + response.song + ' - ' + response.artist + '</div>' +
                                    '<div class="sB">' + response.alb_name + '</div>' +
                               '</div' +
                            '</li>';
                    return newItem;
                }
          
                // handles changing of the color of the room buttons
                var oldButton;

                $('#basin, #copper, #dora, #vail, #winterpark').click(function(){
                    // color change
                    if (oldButton) {
                        oldButton.removeClass('btn-primary').addClass('btn-secondary');
                    }
                    $(this).removeClass('btn-secondary').addClass('btn-primary');
                    oldButton = $(this);
                });
                
                // changing server room functionality
                $(".room-btn").click(function(){
                    // room change
                    var rname = $(this).text();// stores the name of the room

                    // actually attempting to change rooms
                    socket.emit('room join', rname, function(status, elements){
                        if(status === 0){
                            console.log('Room change successful!');

                            // enabled fields
                            $('#chat-submit, #chat-input, #songSearch, #dropButton').prop('disabled', false);

                            $('#messages').html('');// wipe message log when changing rooms
                            $('#queueList').html('');
                            
                            var queryStr = "";
                            for(var i = 0; i < elements.length; i++){
                                queryStr += elements[i].sid + ',';
                            }
                            queryStr = queryStr.substr(0, queryStr.length - 1); // remove last extra comma

                            $.ajax({
                                url:"https://api.spotify.com/v1/tracks/?ids=" + queryStr,
                                type: 'GET',
                                dataType: "text json",
                                //async: false,
                                headers: {
                                    'Authorization': 'Bearer ' + accessToken
                                },
                                success: function(data2) {
                                    console.log('Successful Spotify track info request:');
                                    
                                    var listObj = $('#queueList');
                                    var first = true;

                                    for(var i = 0; i < data2.tracks.length; i++){
                                        listObj.append(buildMsg2({
                                            albumImg: data2.tracks[i].album.images[1].url,
                                            song: data2.tracks[i].name,
                                            artist: data2.tracks[i].artists[0].name,
                                            alb_name: data2.tracks[i].album.name
                                        }, first));
                                        first = false;
                                    }                                    
                                },
                                error: function() {
                                    console.log('couldnt queue up received song \'' + sid + '\'');
                                }
                            });
                        }
                        else{
                            console.log('Room change failed, status ' + status);
                        }
                    });
                });
            });
        </script>
    </body>
</html>
