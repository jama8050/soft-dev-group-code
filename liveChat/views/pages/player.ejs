<% include ../partials/header %>
    <style>
        .s1, .s2{
            word-wrap: inherit;
            color: white;
            margin-left: 70px;
        }
        .s1{
            margin-top:10px;
        }

        .dropdown-menu{
            background-color:#19222B;
        }

        .dropdown-item{
            background-color: #19222B;
                height: 65px;
                width:100%;
            }

        .dropdown-item:hover{
            background-color: white;
        }

        .dropdown-item:hover .s1{
            color: black;
        }

        .dropdown-item:hover .s2{
            color: black;
        }

        .albimg1{
            margin-top:-15px;
            margin-left:-10px;
        }

        .col-sm-7{
            width: 100px;
        }


        </style>

<div class="container text-center my-auto my-sm-auto">
    <div class="row">
        <div class="col-sm-3 card" style = "margin-right: 100px">
            <div class="card">
                <p> Song Search
                    <form id="form_search" method = "post" style="max-width: 300px;">
                        <div class="dropdown">
                            <input type="text" placeholder="Search..." name="search2" id="songSearch">
                                <button type="submit" id="dropButton"  data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fa fa-search"></i>
                                </button>
                            <div class="dropdown-menu pr-5" aria-labelledby="dropButton">
                                <a class="dropdown-item" href="#">
                                    <div class = "container search-result" id="result1">
                                        <img class = "albimg1" id = "item1a" src="resources/imgs/meme.png" width = "65" height = "65" align = "left">
                                            <div class="s1" id = 'item1b'>Hello i am song name dude</div>
                                            <div class="s2" id = 'item1c'>Burger boi</div>
                                    </div>
                                </a>
                                <a class="dropdown-item" href="#">
                                    <div class = "container search-result" id="result2">
                                        <img class = "albimg1" id = "item2a" src="resources/imgs/meme.png" width = "65" height = "65" align = "left">
                                            <div class = "container" id= "cont1in">
                                                <div class="s1" id = 'item2b'>Song Name</div>
                                                <div class="s2" id = 'item2c'>Album Name</div>
                                            </div>
                                    </div>
                                </a>
                                <a class="dropdown-item" href="#">
                                    <div class = "container search-result" id="result3">
                                        <img class = "albimg1" id = "item3a" src="resources/imgs/meme.png" width = "65" height = "65" align = "left">
                                            <div class = "container" id= "cont1in">
                                                <div class="s1" id = 'item3b'>Song Name</div>
                                                <div class="s2" id = 'item3c'>Album Name</div>
                                            </div>
                                    </div>
                                </a>
                                <a class="dropdown-item" href="#">
                                    <div class = "container search-result" id="result4">
                                        <img class = "albimg1" id = "item4a" src="resources/imgs/meme.png" width = "65" height = "65" align = "left">
                                            <div class = "container" id= "cont1in">
                                                <div class="s1" id = 'item4b'>Song Name</div>
                                                <div class="s2" id = 'item4c'>Album Name</div>
                                            </div>
                                    </div>
                                </a>
                                <a class="dropdown-item" href="#">
                                    <div class = "container search-result" id="result5">
                                        <img class = "albimg1" id = "item5a" src="resources/imgs/meme.png" width = "65" height = "65" align = "left">
                                            <div class = "container" id= "cont1in">
                                                <div class="s1" id = 'item5b'>Song Name</div>
                                                <div class="s2" id = 'item5c'>Album Name</div>
                                            </div>
                                    </div>
                                </a>
                            </div>
                        </div>
                    </form>

                </p>
            </div>
            <div class="card h-100">
                <p>
                    <a href="#">Queue</a>
                </p>
                <p>
     <div class = "container search-result" id="result5">
                                        <img class = "albimg1" id = "item5a" src="resources/imgs/meme.png" width = "65" height = "65" align = "left">
                                            <div class = "container" id= "cont1in">
                                                <div class="s1" id = 'item5b'>Song Name</div>
                                                <div class="s2" id = 'item5c'>Album Name</div>
                                            </div>
                                    </div>
                        <p>Votes: <span id="clicks">0</span></p>
                        <br/>
                        <br/>
                        <br/>
                        <br/>
                        <br/>
                        <br/>
                </p>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="row">
                <div class="col-sm-5">
                    <div class="panel panel-default text-center">
                        <div class="panel-body" style = "background-color: #19222B">
                            <img id= "album" src = 'resources/imgs/zep.jpg' width = "300px" height="300px">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-5">
                    <div class="card" style = "margin-right: -132px">
                        <h4 id="song_title">Song Title </h4>
                            <div class="container">
                                <div class="row align-items-start">
                                    <div class='col-sm-6'>
                                        <p id="artist_name">Artist</p>
                                    </div>
                                        <div class='col-sm-6'>
                                            <button id= "mute_button" class="btn btn-default btn-sm" aria-expanded="false" onclick="mute_button()"><i class="fas fa-volume-up" aria-hidden="true"></i></button>
                                        </div>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
        </div>
            <div class="col-sm-2 card">
                <div class="thumbnail">
                    <p>Server List:</p>
                    <button class="btn btn-secondary room-btn color-btn" id="basin">A-Basin</button>
                    <br/>
                    <br/>
                    <button class="btn btn-secondary room-btn color-btn" id="copper">Copper Mountain</button>
                    <br/>
                    <br/>
                    <button class="btn btn-secondary room-btn color-btn" id="dora">Eldora</button>
                    <br/>
                    <br/>
                    <button class="btn btn-secondary room-btn color-btn" id="vail">Vail Resorts</button>
                    <br/>
                    <br/>
                    <button class="btn btn-secondary room-btn color-btn" id="winterpark">Winter Park</button>
                    <br/>
                    <br/>
                    <br/>
                </div>
            </div>
            <br/>
            <br/>
            <br/>
        </div>
    </div>

        <!-- Chat box adapted from BhaumikPatel https://bootsnipp.com/snippets/r1KW -->
        <div class="container">
            <div class="row">
                <div class="col-sm-6 float-center offset-3">
                    <div class="card", style = "margin-right: -30px; margin-left:-30px">
                        <div class="card-header bg-primary bog text-white">
                            <h5 class="card-title"><img class="widgetImg" src="resources/imgs/si-glyph-bubble-message-text.svg" /> Chat</h5>
                        </div>
                        <div class="card-body pt-lg-0 px-lg-1">
                            <ul id="messages" class="chat list-group list-group-flush">
                                <!-- Chat messages go here -->
                            </ul>
                        </div>
                        <div class="card-footer">
                            <form>
                                <div class="input-group input-group-sm">
                                    <input id="chat-input" type="text" class="form-control" placeholder="Type your message here..." autocomplete="off"/>
                                    <div class="input-group-append">
                                        <input type="submit" class="btn btn-warning btn-sm" id="chat-submit" value="Send!">
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script type="text/javascript">
            $(function(){
                // jQuery to refresh the Spotify WebAPI access token
                function refreshTheToken(){
                    $.ajax({url: location.protocol + "//" + location.host + "/refresh_token", success: function(result){
                        console.log('new access token: ' + result.access_token);
                        accessToken = result.access_token;
                    }});
                }
                setInterval(function(){ refreshTheToken(); }, 1800000); // refresh the access token every 30 minutes
                // immediately get the access token
                var accessToken = refreshTheToken();

                var songs; // stores songs

                
                // deals with filling the search dropdown
                function callback(response){ 
                    songs = response;

                    // fill out the 5 dropdown search results
                    for(var i = 0; i < 5 && i < songs.tracks.items.length; i++){
                        $('#item' + (i + 1) + 'a').attr('src', songs.tracks.items[i].album.images[0].url); //album image
                        $('#item' + (i + 1) + 'b').html((songs.tracks.items[i].name) + ' - ' + (songs.tracks.items[i].album.artists[0].name)); //song name + artist name
                        $('#item' + (i + 1) + 'c').html((songs.tracks.items[i].album.name)); //album name
                    }
                }

                var oldButton;
                $('.color-btn').click(function(){
                    if (oldButton) {
                        oldButton.removeClass('btn-primary').addClass('btn-secondary');
                    }

                    $(this).removeClass('btn-secondary').addClass('btn-primary');

                    oldButton = $(this);
                });


                // send search results to spotify
                function getSearchResults(e){
                    e.preventDefault(); //prevents page from rerendering after 'enter' key is pressed
                    var song = $('#songSearch').val();

                    $.ajax({
                        url:"https://api.spotify.com/v1/search?q=" + song + "&type=track&limit=8",
                        type: 'GET',
                        dataType: "text json",
                        //async: false,
                        headers: {
                            'Authorization': 'Bearer ' + accessToken
                        },
                        success: function(data) {
                            callback(data); // fill dropdown
                            $('.dropdown-toggle').dropdown('toggle'); // open the dropdown to show the results
                        },
                        error: function() {
                            console.log('fail');
                        }
                    });
                }
                
                // run search for songs
                $('#form_search').submit(function(e){ getSearchResults(e); });
                $('#dropButton').click(function(e){ getSearchResults(e); });

                // legacy code for upvote system, might implement in the future
                /*var clicks = 0;
                function thumbs_up() {
                    clicks += 1;
                    $("#clicks").text(clicks);
                    $('#up').prop('disabled', true);
                    $('#down').prop('disabled', false);
                }
                function thumbs_down() {
                    if (clicks > 0){
                        clicks -= 1;
                        $("#clicks").text(clicks);
                        $('#down').prop('disabled', true);
                        $('#up').prop('disabled', false);
                    }
                }*/

                // establishes socket connection to the server while sending the username as the parameter
                var socket = io({
                    query: {
                        uid: Cookies.get('uid')
                    }
                });

                // makes string for adding elements to the chat log
                function buildMsg(data, clientSaid){
                    var innerCount;

                    // timestamp stuff
                    var d = new Date();
                    var h = d.getHours(), m = d.getMinutes(), side = "AM";
                    if(h > 12){
                        h -= 12;
                        side = "PM";
                    }
                    var t = h.toString() + ":" + m.toString() + side;

                    if(clientSaid){
                        // client send message 
                        innerCount =
                        '<li class="right list-group-item clearfix">' +
                            '<div class="chat-body clearfix">' +
                                '<div class="header">' +
                                    '<small class="text-muted">' +
                                        '<img class="widgetImg" src="resources/imgs/si-glyph-clock.svg" />' + t +
                                    '</small>' +
                                    '<strong class="float-right primary-font">' + data.name + '</strong>' +
                                '</div>' +
                                '<p class="card-text">' +
                                    data.msg +
                                '</p>' +
                            '</div>' +
                        '</li>';
                    }
                    else{
                        innerCount =
                        '<li class="left list-group-item clearfix">' +
                            '<div class="chat-body clearfix">' +
                                '<div class="header">' +
                                    '<strong class="primary-font">' + data.name + '</strong>' +
                                    '<small class="float-right text-muted">' +
                                        '<img class="widgetImg" src="resources/imgs/si-glyph-clock.svg" />' + t +
                                    '</small>' +
                                '</div>' +
                                '<p class="card-text">' +
                                    data.msg +
                                '</p>' +
                            '</div>' +
                        '</li>';
                    }
                    return innerCount;
                }

                // sending chat message
                $('form').submit(function(e){
                    e.preventDefault(); // prevents page reloading
                    
                    $('#messages').append(buildMsg({name:Cookies.get('user'), msg:$('#chat-input').val()}, true)); // add message to local chat log

                    socket.emit('chat message', $('#chat-input').val()); // send message to all other room participants

                    $('#chat-input').val(''); // clear input field
                    
                    return false; // not sure why this is here tbh, was in an example
                });

                // receiving message from other people
                socket.on('chat message', function(data){
                    $('#messages').append(buildMsg(data, false)); // add to the message log
                });

                $('.search-result').click(function(){ //lets us know which song index was chosen, use index to get specific song uri
                    var uri = songs.tracks.items[this.id[6] - 1].uri;
                    console.log('song: ' + uri); // logs URI of the song
                    $('.dropdown-toggle').dropdown('toggle'); // removes the dropdown from view


                    // send song ID to database
                    socket.emit('queue song', uri, function(status){
                        if(status === 0){
                            console.log('Song sent to server successfully');
                        }
                        else if (status === 1){ // malformed URI
                            console.log('The URI \'' + uri + '\' is malformed');
                        }
                        else if(status === 2){ // already in the queue
                            console.log('The song corresponding to URI \'' + uri + '\' is already in the queue');
                        }
                        else{
                            console.log('Unknown error? Status: ' + status);
                        }
                    });
                });

                socket.on('queue song', function(data){
                    //console.log('Song \'' + data.uri + '\' received');
                    $.ajax({
                        url:"https://api.spotify.com/v1/tracks/" + data.uri,
                        type: 'GET',
                        dataType: "text json",
                        //async: false,
                        headers: {
                            'Authorization': 'Bearer ' + accessToken
                        },
                        success: function(data2) {
                            // buildMsg2 has to be built to handle how the data will be presented in the queue
                            //$('#Queue').append(buildMsg2(data, false));
                            console.log(data2.name);
                            console.log(data2.artists[0].name);
                            console.log(data2.album.images[1].url)
                        },
                        error: function() {
                            console.log('fail');
                        }
                    });
                    // get song details via spotify API call (song's name, artist, album cover)

                    // append song element to the queue
                });

                // changing server room functionality
                $(".room-btn").click(function(){
                    var rname = $(this).text();// stores the name of the room

                    // actually attempting to change rooms
                    socket.emit('room join', rname, function(status){
                        if(status === 0){
                            console.log('Room change successful!');
                            
                            room = rname; // used for console logs, not very important

                            $('#messages').html('');// wipe message log when changing rooms
                        }
                        else{
                            console.log('Room change failed, status ' + status);
                        }
                    });
                });
            });
        </script>
    </body>
</html>
